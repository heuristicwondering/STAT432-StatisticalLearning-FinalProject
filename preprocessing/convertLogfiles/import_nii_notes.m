function [CONN_ID1,StudyID1,Date1,LCNIID1,total_volumes1,outvols1,scan_lengths1] = import_nii_notes(workbookFile,sheetName,startRow,endRow)
%IMPORTFILE Import data from a spreadsheet
%   [CONN_ID1,StudyID1,Date1,LCNIID1,total_volumes1,outvols1,scan_lengths1]
%   = IMPORTFILE(FILE) reads data from the first worksheet in the Microsoft
%   Excel spreadsheet file named FILE and returns the data as column
%   vectors.
%
%   [CONN_ID1,StudyID1,Date1,LCNIID1,total_volumes1,outvols1,scan_lengths1]
%   = IMPORTFILE(FILE,SHEET) reads from the specified worksheet.
%
%   [CONN_ID1,StudyID1,Date1,LCNIID1,total_volumes1,outvols1,scan_lengths1]
%   = IMPORTFILE(FILE,SHEET,STARTROW,ENDROW) reads from the specified
%   worksheet for the specified row interval(s). Specify STARTROW and
%   ENDROW as a pair of scalars or vectors of matching size for
%   dis-contiguous row intervals. To read to the end of the file specify an
%   ENDROW of inf.
%
%	Non-numeric cells are replaced with: NaN
%
% Example:
%   [CONN_ID1,StudyID1,Date1,LCNIID1,total_volumes1,outvols1,scan_lengths1] = importfile('20170717_nii_notes.xlsx','Sheet1',2,26);
%
%   See also XLSREAD.

% Auto-generated by MATLAB on 2017/07/28 19:10:16

%% Input handling

% If no sheet is specified, read first sheet
if nargin == 1 || isempty(sheetName)
    sheetName = 1;
end

% If row start and end points are not specified, define defaults
if nargin <= 3
    startRow = 2;
    endRow = 26;
end

%% Import the data, extracting spreadsheet dates in Excel serial date format
[~, ~, raw, dates] = xlsread(workbookFile, sheetName, sprintf('A%d:G%d',startRow(1),endRow(1)),'' , @convertSpreadsheetExcelDates);
for block=2:length(startRow)
    [~, ~, tmpRawBlock,tmpDateNumBlock] = xlsread(workbookFile, sheetName, sprintf('A%d:G%d',startRow(block),endRow(block)),'' , @convertSpreadsheetExcelDates);
    raw = [raw;tmpRawBlock]; %#ok<AGROW>
    dates = [dates;tmpDateNumBlock]; %#ok<AGROW>
end
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
cellVectors = raw(:,[2,7]);
raw = raw(:,[1,4,5,6]);
dates = dates(:,3);

%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),dates); % Find non-numeric cells
dates(R) = {NaN}; % Replace non-numeric Excel dates with NaN

%% Create output variable
I = cellfun(@(x) ischar(x), raw);
raw(I) = {NaN};
data = reshape([raw{:}],size(raw));

%% Allocate imported array to column variable names
CONN_ID1 = data(:,1);
StudyID1 = cellVectors(:,1);
dates(~cellfun(@(x) isnumeric(x) || islogical(x), dates)) = {NaN};
Date1 = datetime([dates{:,1}].', 'ConvertFrom', 'Excel', 'Format', 'MM/dd/yyyy');
LCNIID1 = data(:,2);
total_volumes1 = data(:,3);
outvols1 = data(:,4);
scan_lengths1 = cellVectors(:,2);

% For code requiring serial dates (datenum) instead of datetime, uncomment
% the following line(s) below to return the imported dates as datenum(s).

% Date1=datenum(Date1);

